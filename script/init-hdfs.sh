#!/bin/bash

# Script d'initialisation HDFS pour le cluster Velib
# Utilisation: ./init-hdfs.sh

echo "=== INITIALISATION HDFS VELIB ==="
echo "Ce script initialise le syst√®me HDFS avec les donn√©es Velib"
echo ""

# V√©rifier que le cluster est en cours d'ex√©cution
echo "V√©rification du cluster..."
running_containers=$(docker-compose ps -q)
if [ -z "$running_containers" ]; then
    echo "‚ùå Le cluster n'est pas d√©marr√©. Lancez d'abord ./deploy-cluster.sh"
    echo ""
    echo "Usage:"
    echo "1. ./deploy-cluster.sh    # D√©marrer le cluster"
    echo "2. ./init-hdfs.sh         # Initialiser HDFS (ce script)"
    exit 1
fi

echo "Cr√©ation des dossiers HDFS..."

# Cr√©er les dossiers HDFS
docker exec namenode hdfs dfs -mkdir -p /users/ipssi/input/velib2
docker exec namenode hdfs dfs -mkdir -p /users/ipssi/output

echo "Copie du fichier velib.csv vers HDFS..."

# Copier le fichier vers le conteneur namenode puis vers HDFS
docker cp app/velib.csv namenode:/tmp/velib.csv
docker exec namenode hdfs dfs -put /tmp/velib.csv /users/ipssi/input/velib2/

# V√©rifier que le fichier est bien copi√©
echo "V√©rification des fichiers dans HDFS..."
docker exec namenode hdfs dfs -ls /users/ipssi/input/velib2/

if [ $? -eq 0 ]; then
    echo ""
    echo "‚úÖ INITIALISATION HDFS TERMIN√âE AVEC SUCC√àS"
    echo ""
    echo "üìä Donn√©es disponibles dans HDFS:"
    echo "‚Ä¢ Chemin HDFS: hdfs://namenode:9000/users/ipssi/input/velib2/velib.csv"
    echo "‚Ä¢ Nombre d'enregistrements: ~1453 lignes"
    echo "‚Ä¢ Dossier de sortie: hdfs://namenode:9000/users/ipssi/output/"
else
    echo "‚ùå Erreur lors de l'initialisation HDFS"
    exit 1
fi

echo ""
echo "üéØ NEXT STEPS POUR VOS COLL√àGUES:"
echo "‚Ä¢ BATCH: D√©velopper les analyses des donn√©es (Spark SQL, agr√©gations, etc.)"
echo "‚Ä¢ STREAMING: Impl√©menter le traitement temps r√©el (Structured Streaming)"

echo ""
echo "=== COMMANDES UTILES ==="
echo "‚Ä¢ V√©rifier HDFS:          docker exec namenode hdfs dfs -ls /users/ipssi/input/velib2/"
echo "‚Ä¢ Interface Hadoop:       http://localhost:9870"
echo "‚Ä¢ Interface Spark:        http://localhost:8080"
echo "‚Ä¢ Acc√©der √† MongoDB:      docker exec -it mongodb-ipssi mongosh"
