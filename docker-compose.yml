version: "3"
name: ipssi-cluster

services:
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: namenode
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
      - ./app:/app
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
    ports:
      - "9870:9870"

  datanode-1:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-1
    ports:
      - "9864:9864"
    volumes:
      - hadoop_datanode-1:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  datanode-2:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-2
    ports:
      - "9865:9864"
    volumes:
      - hadoop_datanode-2:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  datanode-3:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: datanode-3
    ports:
      - "9866:9864"
    volumes:
      - hadoop_datanode-3:/hadoop/dfs/data
    depends_on:
      - namenode
    env_file:
      - ./hadoop.env

  resourcemanager:
    image: bde2020/hadoop-resourcemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: resourcemanager
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    env_file:
      - ./hadoop.env
    ports:
      - "8088:8088"

  nodemanager:
    image: bde2020/hadoop-nodemanager:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: nodemanager
    ports:
      - "8042:8042"
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    env_file:
      - ./hadoop.env

  historyserver:
    image: bde2020/hadoop-historyserver:2.0.0-hadoop3.2.1-java8
    restart: always
    container_name: historyserver
    ports:
      - "8188:8188"
    depends_on:
      - namenode
      - datanode-1
      - datanode-2
      - datanode-3
    volumes:
      - hadoop_historyserver:/hadoop/yarn/timeline
    env_file:
      - ./hadoop.env

  spark-master:
    image: bde2020/spark-master:3.3.0-hadoop3.3
    restart: always
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - "INIT_DAEMON_STEP=setup_spark"
    volumes:
      - ./app:/app

  spark-worker-1:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    restart: always
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  spark-worker-2:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    restart: always
    container_name: spark-worker-2
    depends_on:
      - spark-master
    ports:
      - "8082:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  spark-worker-3:
    image: bde2020/spark-worker:3.3.0-hadoop3.3
    restart: always
    container_name: spark-worker-3
    depends_on:
      - spark-master
    ports:
      - "8083:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"

  mongodb:
    image: mongo
    container_name: mongodb-ipssi
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "pwd"
    volumes:
      - ./mongodb:/data/db

volumes:
  hadoop_namenode:
  hadoop_datanode-1:
  hadoop_datanode-2:
  hadoop_datanode-3:
  hadoop_historyserver: